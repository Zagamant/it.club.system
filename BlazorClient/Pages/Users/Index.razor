@page "/users"
@page "/users/{ClubName}/"
@using Microsoft.AspNetCore.Authorization
@using BlazorClient.Services.AccountManagement
@using System.BLL.Models.UserManagement
@using BlazorClient.Services.GroupManagement
@attribute [Authorize]
@inject NavigationManager _navigationManager
@inject IAccountService _accountService
@inject IGroupService _groupService


<div class="table">
    <DataGrid TItem="UserModel"
              RowSelectable=@(context => { _navigationManager.NavigateTo($"users/{context.Id}/edit"); return true;})
              Data="@_users"
              TotalItems="@_totalCount"
              Filterable="true"
              FilterMethod="DataGridFilterMethod.Contains">

        <DataGridColumns>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.UserName)" Caption="Имя пользователя"/>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.Name)" Caption="Имя"/>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.Surname)" Caption="Фамилия"/>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.MiddleName)" Caption="Отчество"/>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.BirthDay)" Caption="Дата рождения"/>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.Email)" Caption="Емеил"/>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.Id)" Sortable="false" Filterable="false">
                <DisplayTemplate>
                    <Button Color="Color.Primary" Clicked="@(() => EditUser(context.Id))">
                        <Icon Name="IconName.Edit" IconStyle="IconStyle.Solid"/>
                    </Button>
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.Id)" Sortable="false" Filterable="false">
                <DisplayTemplate>
                    <Button Color="Color.Danger" Clicked="@(() => DeleteUser(context.Id))">
                        Delete
                    </Button>
                </DisplayTemplate>
            </DataGridColumn>

        </DataGridColumns>

    </DataGrid>
</div>
<div>
    <Link To="users/add" Class="separate-add-button" Color="Color.Success"/>
</div>


@code {

    [Parameter]
    public string ClubName { get; set; }

    private bool _loading;
    private IList<UserModel> _users;
    private bool _isDeleting;
    private int _totalCount;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _users = (await _accountService.GetAll()).ToList();
        _totalCount = _users.Count;
        _loading = false;
    }

    private async void DeleteUser(int id)
    {
        var user = _users.First(x => x.Id == id);
        _isDeleting = true;
        await _accountService.Delete(id);
        _users.Remove(user);
        StateHasChanged();
        _isDeleting = false;
    }

    private void EditUser(int id)
    {
        _navigationManager.NavigateTo($"/users/{id}/edit");
    }

}