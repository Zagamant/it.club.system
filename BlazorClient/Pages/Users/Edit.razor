@page "/users/{id:int}/edit"
@using Microsoft.AspNetCore.Authorization
@using BlazorClient.Services.AccountManagement
@using BlazorClient.Services.AlertManagement
@using System.BLL.Models.UserManagement
@using BlazorClient.Services.UserManagement
@attribute [Authorize]
@inject IAlertService _alertService
@inject IAccountService _accountService
@inject IUserService _userService
@inject NavigationManager _navigationManager


@if (model != null)
{
    <div class="white-bg-plate form">
        <h1>Редактировать</h1>

        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>

            <Divider DividerType="DividerType.TextContent" Text="О пользователе"
                     Margin="Margin.Is4.FromTop.Is4.FromBottom"/>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Имя пользователя</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit Placeholder="Имя пользователя" @bind-Text="@model.UserName"/>
                </FieldBody>
            </Field>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Фамилия</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit Placeholder="Фамилия" @bind-Text="@model.Surname"/>
                </FieldBody>
            </Field>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Имя</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit Placeholder="Имя" @bind-Text="@model.Name"/>
                </FieldBody>
            </Field>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Отчество</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit Placeholder="Отчество" @bind-Text="@model.MiddleName"/>
                </FieldBody>
            </Field>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Дата рождения</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <DateEdit TValue="DateTime" @bind-Date="@model.BirthDay"/>
                </FieldBody>
            </Field>


            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Пароль</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit Role="TextRole.Password" @bind-Text="@password"/>
                </FieldBody>
            </Field>

            <Divider DividerType="DividerType.TextContent" Text="Местоположение"
                     Margin="Margin.Is4.FromTop.Is4.FromBottom"/>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Страна</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit TValue="DateTime" @bind-Text="@model.Country"/>
                </FieldBody>
            </Field>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Город</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit TValue="DateTime" @bind-Text="@model.City"/>
                </FieldBody>
            </Field>

            <Field Horizontal="true">
                <FieldLabel ColumnSize="ColumnSize.Is5">Улица</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is5">
                    <TextEdit TValue="DateTime" @bind-Text="@model.AddressLine"/>
                </FieldBody>
            </Field>


            <Row Class="justify-content-space ">
                <Column ColumnSize="ColumnSize.Is12" Margin="Margin.Is2">
                    <Button Type="ButtonType.Submit" Size="Size.Large" Color="Color.Primary" Block="true" disabled="@loading">
                        @if (loading)
                        {
                            <span class="spinner-border spinner-border-sm mr-1"></span>
                        }
                        Сохранить
                    </Button>
                </Column>
                <Column ColumnSize="ColumnSize.Is12" Margin="Margin.Is0.FromTop.Is2">
                    <Button To="users" Color="Color.Secondary" Block="true">Отменить</Button>
                </Column>

            </Row>
        </EditForm>
    </div>
}

else
{
    <div class="text-center p-3">
        <span class="spinner-border spinner-border-lg align-center"></span>
    </div>
}
<AlertCustom/>


@code {
    private UserModel model;
    private string password;
    private bool loading;
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        model = await _accountService.GetById(Id);
    }
    
    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            await _userService.UpdateAsync(Id, model, password);
            _alertService.Success("Update successful", keepAfterRouteChange: true);
            _navigationManager.NavigateTo("users");
        }
        catch (Exception ex)
        {
            _alertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }

}