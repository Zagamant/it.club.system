@page "/users/{id:int}"
@using System.BLL.Models.UserManagement
@using BlazorClient.Services.AccountManagement
@using BlazorClient.Services.ClubManagement
@using BlazorClient.Services.UserManagement
@using System.BLL.Models.ClubManagement
@using System.Linq
@inject NavigationManager _navigationManager
@inject IAccountService _accountService
@inject IUserService _userService
@inject IClubService _clubService

<div class="main-info">
    <div class="photo-card">
        <Figure Size="FigureSize.Is256x256">
            <FigureImage Source="/assets/images/User-photo.jpg" Style="border-radius: 2px" AlternateText="256x256"/>
            <FigureCaption>
                <Button Color="Color.Primary" Block="true" Class="edit-button" Outline="false" Clicked="@OnButtonClicked">Редактировать</Button>
            </FigureCaption>
        </Figure>
    </div>
    <div class="info">
        <DisplayHeading Size="DisplayHeadingSize.Is2">
            @($"{_accountService.User.Name} {_accountService.User.Surname}")
        </DisplayHeading>
        <div class="tables">
            <Table Borderless="true" Class="my-table">
                <TableBody>
                    <TableRow>
                        <TableRowHeader>
                            <b>Клуб:</b>
                        </TableRowHeader>
                        <TableRowCell>@(!_clubs.Any() ? "N/A" : string.Join(", ", _clubs))</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader>
                            <b>ФИО:</b>
                        </TableRowHeader>
                        <TableRowCell>@($"{_user?.Name} {_user?.MiddleName} {_user?.Surname}")</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader>
                            <b>Номер телефона:</b>
                        </TableRowHeader>
                        <TableRowCell>@_user?.PhoneNumber</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader>
                            <b>Список курсов:</b>
                        </TableRowHeader>
                        <TableRowCell>@(_user?.CoursesPassed?.Select(c => c.Title).Aggregate(string.Empty, (s1, s2) => $"{s1}, {s2}"))</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader>
                            <b>Контакты:</b>
                        </TableRowHeader>
                        <TableRowCell>@(_user?.Contacts?.Select(c => $"{c.Name}: {c.ContactAsIs}").Aggregate(string.Empty, (s1, s2) => $"{s1}, {s2}"))</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader>
                            <b>Другая информация :</b>
                        </TableRowHeader>
                        <TableRowCell>@_user?.AdditionalInfo</TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>
        </div>

    </div>
</div>

@code {

    private UserModel _user;
    private IEnumerable<ClubModel> _clubs = new List<ClubModel>();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _clubs = await _clubService.GetClubsByUser(Id);
        _user = await _userService.GetAsync(Id);
        if (_user is null)
        {
            _navigationManager.NavigateTo("/error");
        }
        await base.OnInitializedAsync();
    }

    private void OnButtonClicked()
    {
        _navigationManager.NavigateTo(@$"/users/{_user.Id}/edit");
    }

}