@page "/users/{id:int}"
@using BlazorClient.Services.AccountManagement
@using System.BLL.Models.UserManagement
@using BlazorClient.Services.UserManagement
@inject NavigationManager NavigationManager
@inject IAccountService  AccountService
@inject IUserService UserService

<h2>@_user.ToString()</h2>
<div class="main-info">
    <div class="photo-card">
        <Figure Size="FigureSize.Is256x256">
            <FigureImage Source="/assets/images/User-photo.jpg" AlternateText="256x256" />
            <FigureCaption>
                
                    <Heading Size="HeadingSize.Is4">
                        <Button Style="height:40px; width: 250px; margin-top:20px; margin-left:20px" Color="Color.Info">Редактировать</Button>
                    </Heading>
                
            </FigureCaption>
        </Figure>
    </div>
    <div class="info">
        <div class="Name">
            <DisplayHeading Size="DisplayHeadingSize.Is2">
                @($"{AccountService.User.Name} {AccountService.User.Surname}")
            </DisplayHeading>
        </div>
        <div class="tables">
            <Table Borderless="true" Style="font-size:150%;">
                <TableBody>
                    <TableRow>
                        <TableRowHeader> <b>Клуб:</b></TableRowHeader>
                        <TableRowCell>BLANK</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader><b>ФИО:</b></TableRowHeader>
                        <TableRowCell>@($"{_user?.Name} {_user?.MiddleName} {_user?.Surname}")</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader><b>Номер телефона:</b></TableRowHeader>
                        <TableRowCell>@_user?.PhoneNumber</TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>

            <Table Borderless="true" Style="font-size:150%">
                <TableBody>
                    <TableRow>
                        <TableRowHeader><b>Список курсов:</b></TableRowHeader>
                        <TableRowCell>@(_user?.CoursesPassed.Select(c => c.Title).Aggregate((s1,s2) =>$"{s1}, {s2}"))</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader><b>Контакты:</b></TableRowHeader>
                        <TableRowCell>@(_user?.Contacts.Select(c => $"{c.Name}: {c.ContactAsIs}").Aggregate((s1,s2) => $"{s1}, {s2}"))</TableRowCell>
                    </TableRow>
                    <TableRow>
                        <TableRowHeader><b>Другая информация :</b></TableRowHeader>
                        <TableRowCell>@_user?.AdditionalInfo</TableRowCell>
                    </TableRow>
                </TableBody>
            </Table>
        </div>

    </div>
</div>

@code {

    private UserModel _user;
    
    [Parameter]
    public int Id { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        _user = await UserService.GetAsync(Id);
        if (_user is null)
        {
            NavigationManager.NavigateTo("/error");
        }
        await base.OnInitializedAsync();
    }

}
